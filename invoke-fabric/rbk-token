
##### ------------------ Variáveis

$svc = Get-AutomationVariable -Name 'SVCINFRADEV'
$svcpwd = Get-AutomationVariable -Name 'PWDSVCINFRADEV'
$vartenant = Get-AutomationVariable -Name 'tenantid'

##### ------------------ Criação de Credencial

$User = $svc
$PWord = $svcpwd | ConvertTo-SecureString -AsPlainText -Force
$Credential = New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList $User, $PWord

##### ------------------ Função para obter token MS e autenticação fabric

function Set-FabricToken {
   <#
    .SYNOPSIS
        Set authentication token for the Fabric service
    #>
   [CmdletBinding(SupportsShouldProcess)]
   param
   (
      [string]$servicePrincipalId
      ,
      [string]$servicePrincipalSecret
      ,
      [PSCredential]$credential
      ,
      [string]$tenantId
      ,
      [switch]$reset
      ,
      [string]$apiUrl = 'https://api.fabric.microsoft.com'
   )

   if (!$reset) {
      $azContext = Get-AzContext
   }

   if ($apiUrl) {
      $global:apiUrl = $apiUrl
   }

   if (!$azContext) {
      Write-Output "Obtendo token de autenticação"
      if ($servicePrincipalId) {
         $credential = New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList $servicePrincipalId, ($servicePrincipalSecret | ConvertTo-SecureString -AsPlainText -Force)

         Connect-AzAccount -ServicePrincipal -TenantId $tenantId -Credential $credential | Out-Null

         Set-AzContext -Tenant $tenantId | Out-Null
      }
      elseif ($null -ne $credential) {
         Connect-AzAccount -Credential $credential -Tenant $tenantId | Out-Null
      }
      else {
         Connect-AzAccount | Out-Null
      }
      $azContext = Get-AzContext
   }
   if ($PSCmdlet.ShouldProcess("Configurando a Autenção no Microsoft Fabric com o Token de $($azContext.Account)")) {
      Write-output "Conectando com: $($azContext.Account)"

      $global:tokenfabric = (Get-AzAccessToken -ResourceUrl $global:apiUrl).Token
   }
}

#### ------------------- Chamada da função para obter o token

Set-FabricToken -Credential $credential -Tenant $vartenant

#### ------------------- Invocando objetos do Microsoft Fabric

$headers = New-Object "System.Collections.Generic.Dictionary[[String],[String]]"
$headers.Add("Authorization", "Bearer $global:tokenfabric")

$response = Invoke-RestMethod 'https://api.fabric.microsoft.com/v1/workspaces/xxxxxxxx/items/xxxxxxxxxxxx/jobs/instances?jobType=Pipeline' -Method 'POST' -Headers $headers
$response | ConvertTo-Json